server {
    listen      80;
    location / {
        expires -1;
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    location /logs/ {
        expires -1;
        root /usr/share/nginx/static/;
    }
}

server {
    listen      8090;

    location / {
        expires -1;
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri $uri/ /index.html;
    }

    location /logs/ {
        expires -1;
        root /usr/share/nginx/static/;
    }

    # location ~ ^/(static/|media/) {
    #     if ($request_method ~* "(GET|POST)") {
    #         add_header "Access-Control-Allow-Origin"  *;
    #     }

    #     # Preflighted requests
    #     if ($request_method = OPTIONS ) {
    #         add_header "Access-Control-Allow-Origin"  *;
    #         add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
    #         add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
    #         return 200;
    #     }
    #     autoindex on;
    #     root /usr/share/nginx/;
    # }

    location /api {
        # upload large file, begin
        client_max_body_size 8000M;
        client_body_buffer_size 8000M;
        proxy_set_header Host $host;
        proxy_pass http://be.api:8000/api;

       if ($request_method = OPTIONS ) {
             add_header "Access-Control-Allow-Origin"  *;
             add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD, PUT, DELETE";
             add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept, Content-Disposition";
             return 200;
        }
    }
    location /flower {
        rewrite ^/flower/(.*)$ /$1 break;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Host $host;
        proxy_pass http://task.monitor:5555;
    }
    location ~ ^/(be-static/|be-media/) {
        if ($request_method ~* "(GET|POST)") {
             add_header "Access-Control-Allow-Origin"  *;
        }

        # Preflighted requests
        if ($request_method = OPTIONS ) {
             add_header "Access-Control-Allow-Origin"  *;
             add_header "Access-Control-Allow-Methods" "GET, POST, OPTIONS, HEAD";
             add_header "Access-Control-Allow-Headers" "Authorization, Origin, X-Requested-With, Content-Type, Accept";
             return 200;
        }
        autoindex on;
        root /usr/share/nginx/;
    }
    #location /ws {
    #   proxy_http_version 1.1;
    #    proxy_set_header Upgrade $http_upgrade;
    #    proxy_set_header Connection "upgrade";
    #    proxy_pass http://ws.api:8000/websocket;
    #}

    location /upload {
        # upload large file, begin
        client_max_body_size 8000M;
        client_body_buffer_size 8000M;
        client_body_timeout 120;

        add_header X-Clacks-Overhead "GNU Terry Pratchett";
        add_header X-Clacks-Overhead "GNU Terry Pratchet";
        add_header Access-Control-Allow-Origin *;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
        add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
        # upload large file end

        # After upload, pass altered request body to this django view
        upload_pass   /api/file/;

        # Store files to this directory
        # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
        upload_store /usr/share/nginx/be-static/www/file/_upload 1;
        upload_store_access user:rw group:rw all:rw;

        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
        upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

        # Here is where you define additional fields to pass through to upload_complete
        upload_pass_form_field "^submit$|^description$";
        upload_pass_form_field "^name$";
        upload_pass_form_field "^terminal$";
        upload_cleanup 400-599;

    }
}
